# Template

a1.sources = r1
a1.sinks = k1 k2
a1.channels = c1

a1.sources.r1.type=spooldir
a1.sources.r1.ignorePattern=([^\s]+(\.(?i)(gz))$)
a1.sources.r1.spoolDir=${spooldir}
a1.sources.r1.fileHeader = true

a1.sources.r1.interceptors = customInterceptor
a1.sources.r1.interceptors.customInterceptor.type = com.hortonworks.pso.hdp2.readiness.flume.Admin102$Builder

a1.sinks.k1.type = hdfs
a1.sinks.k1.hdfs.path = ${namenode}/mars/fdr/lz/4g/1
a1.sinks.k1.hdfs.filePrefix = MARS
a1.sinks.k1.hdfs.fileSuffix = .FDR
# Replace DataStream with SequenceFile for Production/Performance Tuning.
a1.sinks.k1.hdfs.fileType = DataStream
#a1.sinks.k1.hdfs.fileType = SequenceFile
# Turn on Compress for Production/Performance Tuning.
#a1.sinks.k1.hdfs.codeC = gzip
a1.sinks.k1.hdfs.rollInterval = 60
a1.sinks.k1.hdfs.batchSize = 1000
a1.sinks.k1.hdfs.rollCount = 0
a1.sinks.k1.hdfs.rollSize = 0
a1.sinks.k1.hdfs.idleTimeout = 10
a1.sinks.k1.hdfs.useLocalTimeStamp=true

a1.sinks.k2.type = hdfs
a1.sinks.k2.hdfs.path = ${namenode}/mars/fdr/lz/4g/2
a1.sinks.k2.hdfs.filePrefix = MARS
a1.sinks.k2.hdfs.fileSuffix = .FDR
# Replace DataStream with SequenceFile for Production/Performance Tuning.
a1.sinks.k2.hdfs.fileType = DataStream
#a1.sinks.k2.hdfs.fileType = SequenceFile
# Turn on Compress for Production/Performance Tuning.
#a1.sinks.k2.hdfs.codeC = gzip
a1.sinks.k2.hdfs.rollInterval = 60
a1.sinks.k2.hdfs.batchSize = 1000
a1.sinks.k2.hdfs.rollCount = 0
a1.sinks.k2.hdfs.rollSize = 0
a1.sinks.k2.hdfs.idleTimeout = 10
a1.sinks.k2.hdfs.useLocalTimeStamp=true

a1.channels.c1.type = memory
a1.channels.c1.capacity = 20000
a1.channels.c1.transactionCapacity = 10000

a1.sources.r1.channels = c1
a1.sinks.k1.channel = c1
a1.sinks.k2.channel = c1
